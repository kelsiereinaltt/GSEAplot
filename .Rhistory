Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS"=TRUE)
pp$plots[[1]]
remotes::install_github("kelsiereinaltt/GSEAplot")
library(devtools)
library(GSEAplot)
data(key)
head(key)
descriptive_names=database_key("all")
head(descriptive_names)
GO_mf_filename=database_key("GO molecular function")
GO_mf_filename
data(hallmark.gs)
data(C1.gs) #make this c5
sets=get_genesets(hallmark.gs)
head(sets)
data(aagmex_expr)
expr.input=aagmex_expr
expr.input[1:4,1:6]
data(aagmex_pheno)
pheno.input=aagmex_pheno
pheno.input$phen
head(pheno.input)
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="GSEA_plots",
nperm=1000,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="black")
pp$plots[[50]]
pp$plots[[50]]
pp$plots[[50]]
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[50]]
#head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[50]]
#head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.reference.matrix[[50]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.reference.matrix[[49]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.reference.matrix[[50]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.reference.matrix[[48]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.reference.matrix[[50]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.leading[[1]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.leading[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.leading[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.leading[[1]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.reference.matrix[[50]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.leading[[1]])
names(pp$gene.set.reference.matrix)[[50]]
head(pp$gene.set.leading[[50]])
pp$report1[1,-3]
data1=pp$ES[[2]]
head(data1)
data1=pp$ES[[50]]
head(data1)
data1=pp$ES[[2]]
head(data1)
pp$report1[1,-3]
pp$report1[50,-3]
pp$report1[2,-3]
pp$report1[1,-3]
data1=pp$ES[[2]]
head(data1)
data1=pp$ES[[1]]
head(data1)
data1=pp$ES[[1]]
head(data1)
data1=pp$ES[[2]]
head(data1)
data1=pp$ES[[1]]
head(data1)
enrich_ind=which(data1$EStag==1)
d=data.frame(x=enrich_ind, y=matrix(min(data1$RES)-0.12,length(enrich_ind),1),
vx=matrix(0,length(enrich_ind),1), vy=matrix(0.04,length(enrich_ind),1))
p <- ggplot(data1, aes(index,RES))+geom_line(col="black")
p <- p+geom_segment(data=d, mapping=aes(x=x, y=y, xend=x+vx, yend=y+vy),col="black")
p <- p+theme_classic()
p <- p+ggtitle(names(pp$gene.set.reference.matrix)[[2]])
print(p)
enrich_ind=which(data1$EStag==1)
d=data.frame(x=enrich_ind, y=matrix(min(data1$RES)-0.12,length(enrich_ind),1),
vx=matrix(0,length(enrich_ind),1), vy=matrix(0.04,length(enrich_ind),1))
p <- ggplot(data1, aes(index,RES))+geom_line(col="black")
p <- p+geom_segment(data=d, mapping=aes(x=x, y=y, xend=x+vx, yend=y+vy),col="black")
p <- p+theme_classic()
p <- p+ggtitle(names(pp$gene.set.reference.matrix)[[1]])
print(p)
enrich_ind=which(data1$EStag==1)
d=data.frame(x=enrich_ind, y=matrix(min(data1$RES)-0.12,length(enrich_ind),1),
vx=matrix(0,length(enrich_ind),1), vy=matrix(0.04,length(enrich_ind),1))
p <- ggplot(data1, aes(index,RES))+geom_line(col="black")
p <- p+geom_segment(data=d, mapping=aes(x=x, y=y, xend=x+vx, yend=y+vy),col="black")
p <- p+theme_classic()
p <- p+ggtitle(names(pp$gene.set.reference.matrix)[[2]])
print(p)
enrich_ind=which(data1$EStag==1)
d=data.frame(x=enrich_ind, y=matrix(min(data1$RES)-0.12,length(enrich_ind),1),
vx=matrix(0,length(enrich_ind),1), vy=matrix(0.04,length(enrich_ind),1))
p <- ggplot(data1, aes(index,RES))+geom_line(col="black")
p <- p+geom_segment(data=d, mapping=aes(x=x, y=y, xend=x+vx, yend=y+vy),col="black")
p <- p+theme_classic()
p <- p+ggtitle(names(pp$gene.set.reference.matrix)[[50]])
print(p)
sets=get_genesets(hallmark.gs)
symbols=get_genesymbols(hallmark.gs)
entry1=c("source_1",symbols$HALLMARK_TNFA_SIGNALING_VIA_NFKB)
entry2=c("source_2",symbols$HALLMARK_HYPOXIA)
entry3=c("source_3",symbols$HALLMARK_CHOLESTEROL_HOMEOSTASIS)
hall_13.db=list(entry1,entry2,entry3)
names(hall_13.db)=c(sets[1],sets[2],sets[3])
gene.set.input=create_geneset_db(hall_13.db)
hall_13_results= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="Aagmex_hall13",
nperm=1000,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="black",
abs.val=F)
hall_13_results$plots[[2]]
hall_13_results$plots[[5]]
hall_13_results$plots[[3]]
hall_13_results$plots[[2]]
gtex_example= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="Gtex_hall",
nperm=1000,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="black")
data(aagmex_pheno)
aagmex_pheno$phen
head(aagmex_pheno$class.v)
data(gtex_ann)
head(gtex_ann)
pheno.input=create_phenoinput(gtex_ann)
pheno.input$phen
head(pheno.input$class.v)
data(gtex_expr)
expr.input=gtex_expr
gtex_example= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="Gtex_hall",
nperm=1000,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="black")
data(transf)
data(transm)
tx = t(c("HALLMARK_KLF14","custom",transf[,1], transm[,1]))
gene.set.input=add_to_database(database=hallmark.gs,addition=tx)
head(gene.set.input) #KELSIE - truncate results - it runs off page. if its too hard, just remove this like
data(aagmex_pheno)
aagmex_pheno$phen
head(aagmex_pheno$class.v)
data(gtex_ann)
head(gtex_ann)
pheno.input=create_phenoinput(gtex_ann)
pheno.input$phen
head(pheno.input$class.v)
data(gtex_expr)
expr.input=gtex_expr
gtex_example= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="Gtex_hall",
nperm=1000,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="black")
gtex_example$plots[[51]]
gtex_example$plots[[50]]
data(ENCODE.db)
gene.set.input=ENCODE.db
enrichment_TF= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="Aagmex_TF",
nperm=1000,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="black",
abs.val=F)
enrichment_TF$plots[154]
enrichment_TF$plots[1]
devtools::check(manual=TRUE)
getwd()
devtools::check(document = TRUE)
gtex_example$plots[[1]] #kelsie - pick most significant plot
gtex_example= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="Gtex_hall",
nperm=1000,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="black")
data(transf)
data(transm)
tx = t(c("HALLMARK_KLF14","custom",transf[,1], transm[,1]))
gene.set.input=add_to_database(database=hallmark.gs,addition=tx)
head(gene.set.input)
data(aagmex_pheno)
aagmex_pheno$phen
head(aagmex_pheno$class.v)
data(gtex_ann)
head(gtex_ann)
pheno.input=create_phenoinput(gtex_ann)
pheno.input$phen
head(pheno.input$class.v)
data(gtex_expr)
expr.input=gtex_expr
gtex_example= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="Gtex_hall",
nperm=1000,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="black")
gtex_example$plots[[1]] #kelsie - pick most significant plot
data1=pp$ES[[50]]
gtex_example$plots[[1]] #kelsie - pick most significant plot
#gtex_example$plots[[1]] #kelsie - pick most significant plot
gtex_example$report1[1,-3]
#gtex_example$plots[[1]] #kelsie - pick most significant plot
gtex_example$report1
devtools::check(document = TRUE)
gtex_example$report1
gtex_example$report1
remotes::install_github("kelsiereinaltt/GSEAplot")
library(devtools)
library(GSEAplot)
data(key)
head(key)
descriptive_names=database_key("all")
Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS"=TRUE)
remotes::install_github("kelsiereinaltt/GSEAplot")
library(devtools)
library(GSEAplot)
data(key)
head(key)
descriptive_names=database_key("all")
data(key)
head(key)
descriptive_names=database_key("all")
remotes::install_github("kelsiereinaltt/GSEAplot")
library(devtools)
library(GSEAplot)
remotes::install_github("kelsiereinaltt/GSEAplot")
library(devtools)
library(GSEAplot)
remotes::install_github("kelsiereinaltt/GSEAplot")
remotes::remove_github("kelsiereinaltt/GSEAplot")
remove_github("kelsiereinaltt/GSEAplot")
remove.packages("kelsiereinaltt/GSEAplot")
remove.packages("GSEAplot")
remotes::install_github("kelsiereinaltt/GSEAplot")
remotes::install_github("kelsiereinaltt/GSEAplot")
descriptive_names=database_key("all")
remotes::install_github("kelsiereinaltt/GSEAplot")
library(devtools)
library(GSEAplot)
data(key)
head(key)
descriptive_names=database_key("all")
library(GSEAplot)
remotes::install_github("kelsiereinaltt/GSEAplot")
remotes::install_github("kelsiereinaltt/GSEAplot")
library(devtools)
library(GSEAplot)
data(key)
head(key)
descriptive_names=database_key("all")
descriptive_names=database_key("all")
?database_key
