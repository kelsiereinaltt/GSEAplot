remotes::install_github("kelsiereinaltt/GSEAplot")
library(GSEAplot)
getwd()
setwd("/Users/kelsiereinaltt/Documents")
getwd()
data(key)
head(key)
GO_mf_filename=database_key("GO molecular function")
GO_mf_filename
descriptive_names=database_key("all")
head(descriptive_names)
data(hallmark.gs)
data(C1.gs)
sets=get_genesets(hallmark.gs)
head(sets)
data(aagmex_expr)
expr.input=aagmex_expr
expr.input[1:4,1:6]
data(aagmex_pheno)
pheno.input=aagmex_pheno
pheno.input$phen
head(pheno.input$class.v)
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=10,#supposed to be 1000
fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="green")
plot.ES(list.of.plots=pp$plots,plotname="results")
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=10,#supposed to be 1000
#fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="green")
plot.ES(list.of.plots=pp$plots,plotname="results")
create_phenoinput(gtex_ann)
data("gtex_ann")
create_phenoinput(gtex_ann)
data(gtex_ann)
create_phenoinput(gtex_ann)
data(gtex_ann)
head(gtex_ann)
pheno.input=create_phenoinput(gtex_ann)
remotes::install_github("kelsiereinaltt/GSEAplot")
Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS"=TRUE)
remotes::install_github("kelsiereinaltt/GSEAplot")
library(GSEAplot)
data(gtex_ann)
head(gtex_ann)
pheno.input=create_phenoinput(gtex_ann)
data("aagmex_expr")
data(aagmex_expr)
create_phenoinput(aagmex_expr)
data(aagmex_pheno)
create_phenoinput(aagmex_pheno)
kelsie = create_phenoinput(aagmex_pheno)
View(kelsie)
kelsie$phen[1]
kelsie$phen[2]
pheno.input
pheno.input$phen
pheno.input$class.v
View(pheno.input)
View(pheno.input)
create_phenoinput(gtex_ann)
data(gtex_ann)
head(gtex_ann)
pheno.input=create_phenoinput(gtex_ann)
pheno.input$phen
head(pheno.input$class.v)
data(gtex_ann)
pheno.input=create_phenoinput(gtex_ann)
pheno.input
pheno.input$phen
head(pheno.input$class.v)
data(aagmex_pheno)
pheno.input=create_phenoinput(aagmex_pheno)
data(key)
data(TRED.db)
pheno.input=create_phenoinput(TRED.db)
data(aagmex_expr)
pheno.input=create_phenoinput(aagmex_expr)
View(pheno.input)
View(pheno.input)
pheno.input
data(gtex_expr)
pheno.input=create_phenoinput(gtex_expr)
data(transf)
pheno.input=create_phenoinput(transf)
data(gtex_ann)
head(gtex_ann)
data(transf)
head(transf)
data(aagmex_expr)
head(aagmex_expr)
data(aagmex_pheno)
head(aagmex_pheno)
data("gtex_ann")
head(gtex_ann)
library(GSEAplot)
library(GSEAplot)
update.packages()
update.packages()
yes
yes
yes
library(GSEAplot)
library(GSEAplot)
library(GSEAplot)
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/GSEA.1.0.sei3.R")
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/Run.GSEA.022319.R")
data(key)
head(key)
GO_mf_filename=database_key("GO molecular function")
GO_mf_filename
data(gtex_ann)
gtex_ann
get_genesets(gtex_ann)
data(gtex_expr)
gtex_expr
head(gtex_expr)
sets=get_genesets(hallmark.gs)
sets
data("hallmark.gs")
hallmark.gs
data("gtex_ann")
gtex_expr
gtex_ann
hallmark.gs
C1.gs
aagmex_expr
data(aagmex_pheno)
aagmex_pheno
View(aagmex_pheno)
data(gtex_ann) #male,female
gtex_ann
# install.packages('devtools')
# install.packages('remotes')
# library(devtools)
# library(remotes)
remotes::install_github("kelsiereinaltt/GSEAplot")
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/GSEA.1.0.sei3.R")
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/Run.GSEA.022319.R")
# data(key)
# head(key)
# GO_mf_filename=database_key("GO molecular function")
# GO_mf_filename
#
# descriptive_names=database_key("all")
# head(descriptive_names)
data(hallmark.gs)
# data(C1.gs)
sets=get_genesets(hallmark.gs)
head(sets)
# data(aagmex_expr)
# expr.input=aagmex_expr
# expr.input[1:4,1:6]
data(gtex_expr) #numbers and stuff
expr.input=gtex_expr
data(aagmex_pheno)
pheno.input=aagmex_pheno
# pheno.input$phen
# head(pheno.input$class.v)
data(gtex_ann) #male,female
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=10,#supposed to be 1000
#fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="blue",
color_tick="green")
plot.ES(list.of.plots=pp$plots,plotname="08-13")
getwd()
# install.packages('devtools')
# install.packages('remotes')
# library(devtools)
# library(remotes)
remotes::install_github("kelsiereinaltt/GSEAplot")
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/GSEA.1.0.sei3.R")
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/Run.GSEA.022319.R")
# data(key)
# head(key)
# GO_mf_filename=database_key("GO molecular function")
# GO_mf_filename
#
# descriptive_names=database_key("all")
# head(descriptive_names)
data(hallmark.gs)
# data(C1.gs)
sets=get_genesets(hallmark.gs)
head(sets)
# data(aagmex_expr)
# expr.input=aagmex_expr
# expr.input[1:4,1:6]
data(gtex_expr) #numbers and stuff
expr.input=gtex_expr
data(aagmex_pheno)
pheno.input=aagmex_pheno
# pheno.input$phen
# head(pheno.input$class.v)
data(gtex_ann) #male,female
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=10,#supposed to be 1000
#fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="blue",
color_tick="green")
plot.ES(list.of.plots=pp$plots,plotname="08-13")
# install.packages('devtools')
# install.packages('remotes')
# library(devtools)
# library(remotes)
# remotes::install_github("kelsiereinaltt/GSEAplot")
library(GSEAplot)
data(hallmark.gs)
sets=get_genesets(hallmark.gs)
head(sets)
# data(aagmex_expr)
# expr.input=aagmex_expr
# expr.input[1:4,1:6]
data(gtex_expr) #numbers and stuff
expr.input=gtex_expr
data(aagmex_pheno)
pheno.input=aagmex_pheno
# pheno.input$phen
# head(pheno.input$class.v)
data(gtex_ann) #male,female
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=10,#supposed to be 1000
#fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="blue",
color_tick="green")
# install.packages('devtools')
# install.packages('remotes')
# library(devtools)
# library(remotes)
# remotes::install_github("kelsiereinaltt/GSEAplot")
library(GSEAplot)
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/GSEA.1.0.sei3.R")
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/Run.GSEA.022319.R")
# data(key)
# head(key)
# GO_mf_filename=database_key("GO molecular function")
# GO_mf_filename
#
# descriptive_names=database_key("all")
# head(descriptive_names)
data(hallmark.gs)
# data(C1.gs)
sets=get_genesets(hallmark.gs)
head(sets)
# data(aagmex_expr)
# expr.input=aagmex_expr
# expr.input[1:4,1:6]
data(gtex_expr) #numbers and stuff
expr.input=gtex_expr
# data(aagmex_pheno)
# pheno.input=aagmex_pheno
# pheno.input$phen
# head(pheno.input$class.v)
data(gtex_ann) #male,female
pheno.input=gtex_ann
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=10,#supposed to be 1000
#fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="blue",
color_tick="green")
plot.ES(list.of.plots=pp$plots,plotname="08-13")
# install.packages('devtools')
# install.packages('remotes')
# library(devtools)
# library(remotes)
# remotes::install_github("kelsiereinaltt/GSEAplot")
library(GSEAplot)
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/GSEA.1.0.sei3.R")
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/Run.GSEA.022319.R")
# data(key)
# head(key)
# GO_mf_filename=database_key("GO molecular function")
# GO_mf_filename
#
# descriptive_names=database_key("all")
# head(descriptive_names)
# data(hallmark.gs)
# data(C1.gs)
sets=get_genesets(hallmark.gs)
head(sets)
# data(aagmex_expr)
# expr.input=aagmex_expr
# expr.input[1:4,1:6]
data(gtex_expr) #numbers and stuff
expr.input=gtex_expr
# data(aagmex_pheno)
# pheno.input=aagmex_pheno
# pheno.input$phen
# head(pheno.input$class.v)
data(gtex_ann) #male,female
pheno.input=gtex_ann
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=10,#supposed to be 1000
#fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="blue",
color_tick="green")
plot.ES(list.of.plots=pp$plots,plotname="08-13")
aagmex_expr
gtex_expr
# data(aagmex_pheno)
# pheno.input=aagmex_pheno
# pheno.input$phen
# head(pheno.input$class.v)
data(gtex_ann) #male,female
pheno.input=gtex_ann
gtex_ann
gtex_ann$phen
gtex_ann$class.v
gtex_ann
pheno.input=create_phenoinput(gtex_ann)
# install.packages('devtools')
# install.packages('remotes')
# library(devtools)
# library(remotes)
# remotes::install_github("kelsiereinaltt/GSEAplot")
library(GSEAplot)
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/GSEA.1.0.sei3.R")
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/Run.GSEA.022319.R")
# data(key)
# head(key)
# GO_mf_filename=database_key("GO molecular function")
# GO_mf_filename
#
# descriptive_names=database_key("all")
# head(descriptive_names)
data(hallmark.gs)
# data(C1.gs)
sets=get_genesets(hallmark.gs)
# head(sets)
# data(aagmex_expr)
# expr.input=aagmex_expr
# expr.input[1:4,1:6]
data(gtex_expr) #numbers and stuff
expr.input=gtex_expr
# data(aagmex_pheno)
# pheno.input=aagmex_pheno
# pheno.input$phen
# head(pheno.input$class.v)
data(gtex_ann) #male,female
pheno.input=create_phenoinput(gtex_ann)
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=10,#supposed to be 1000
#fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="blue",
color_tick="green")
# install.packages('devtools')
# install.packages('remotes')
# library(devtools)
# library(remotes)
# remotes::install_github("kelsiereinaltt/GSEAplot")
library(GSEAplot)
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/GSEA.1.0.sei3.R")
#source("/Users/kelsiereinaltt/Documents/GSEAplot/R/Run.GSEA.022319.R")
# data(key)
# head(key)
# GO_mf_filename=database_key("GO molecular function")
# GO_mf_filename
#
# descriptive_names=database_key("all")
# head(descriptive_names)
data(hallmark.gs)
# data(C1.gs)
sets=get_genesets(hallmark.gs)
# head(sets)
# data(aagmex_expr)
# expr.input=aagmex_expr
# expr.input[1:4,1:6]
data(gtex_expr) #numbers and stuff
expr.input=gtex_expr
# data(aagmex_pheno)
# pheno.input=aagmex_pheno
# pheno.input$phen
# head(pheno.input$class.v)
data(gtex_ann) #male,female
pheno.input=create_phenoinput(gtex_ann)
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=1000,#supposed to be 1000
#fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="blue",
color_tick="green")
plot.ES(list.of.plots=pp$plots,plotname="08-13")
aagmex_expr
aagmex_pheno
hallmark.gs
data(aagmex_expr)
expr.input=aagmex_expr
expr.input[1:4,1:6]
head(aagmex_expr)
head(aagmex_expr)
expr.input[1:4,1:6]
aagmex_expr$GSM2520983
# install.packages('devtools')
# install.packages('remotes')
# library(devtools)
# library(remotes)
# remotes::install_github("kelsiereinaltt/GSEAplot")
library(GSEAplot)
# data(hallmark.gs)
# sets=get_genesets(hallmark.gs)
#gene expression data with two phenotypes (genes for comparison)
data(gtex_expr)
expr.input=gtex_expr
#load phenotype
data(gtex_ann)
pheno.input=create_phenoinput(gtex_ann)
#load geneset database
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=gene.set.input,
doc.string="results",
nperm=1000,#supposed to be 1000
#fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="blue",
color_tick="green")
