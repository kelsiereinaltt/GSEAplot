doc.string="result", nperm=100,
fdr.q.val.threshold = 0.25,abs.val=F, bar_percent=0.1, gap_percent=0.1,
under_percent=0.1,upper_percent=0.1,color_line="blue",
color_tick="black")
pp$plots[[1]]
plot.ES(list.of.plots=pp$plots,plotname="GSEA_plotshehe")
remotes::install_github("sarah-innis/GSEA.plot")
library(devtools)
library(GSEA.plot)
#added:
dir="/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/R"
setwd(dir)
source("GSEA.1.0.sei3.R")
source("Run.GSEA.022319.R")
data(key)
head(key)
GO_mf_filename=database_key("GO molecular function")
GO_mf_filename
descriptive_names=database_key("all")
head(descriptive_names)
data(hallmark.gs)
data(C1.gs)
sets=get_genesets(hallmark.gs)
head(sets)
data(aagmex_expr)
expr.input=aagmex_expr
expr.input[1:4,1:6]
data(aagmex_pheno)
pheno.input=aagmex_pheno
pheno.input$phen
head(pheno.input$class.v)
data(hallmark.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input, gene.set.input=gene.set.input,
doc.string="HEHE", nperm=100,
fdr.q.val.threshold = 0.25,abs.val=F, bar_percent=0.1, gap_percent=0.1,
under_percent=0.1,upper_percent=0.1,color_line="blue",
color_tick="black")
plot.ES(list.of.plots=pp$plots,plotname="HEHE")
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.leading[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.leading[[1]])
pp$report1[1,-3]
pp$report1[1,-3]
data1=pp$ES[[2]]
head(data1)
enrich_ind=which(data1$EStag==1)
d=data.frame(x=enrich_ind, y=matrix(min(data1$RES)-0.12,length(enrich_ind),1),
vx=matrix(0,length(enrich_ind),1), vy=matrix(0.04,length(enrich_ind),1))
p <- ggplot(data1, aes(index,RES))+geom_line(col="black")
p <- p+geom_segment(data=d, mapping=aes(x=x, y=y, xend=x+vx, yend=y+vy),col="black")
p <- p+theme_classic()
p <- p+ggtitle(names(pp$gene.set.reference.matrix)[[2]])
print(p)
sets=get_genesets(hallmark.gs)
symbols=get_genesymbols(hallmark.gs)
entry1=c("source_1",symbols$HALLMARK_TNFA_SIGNALING_VIA_NFKB)
entry2=c("source_2",symbols$HALLMARK_HYPOXIA)
entry3=c("source_3",symbols$HALLMARK_CHOLESTEROL_HOMEOSTASIS)
hall_13.db=list(entry1,entry2,entry3)
names(hall_13.db)=c(sets[1],sets[2],sets[3])
gene.set.input=create_geneset_db(hall_13.db)
remotes::install_github("sarah-innis/GSEA.plot")
# library(devtools)
# library(GSEA.plot)
library(GSEA.plot)
source("GSEA.1.0.sei3.R")
source("Run.GSEA.022319.R")
dir="/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/R"
setwd(dir)
data(key)
head(key)
# GO_mf_filename=database_key("GO molecular function")
# GO_mf_filename
descriptive_names=database_key("all")
head(descriptive_names)
data(hallmark.gs)
data(C1.gs)
sets=get_genesets(hallmark.gs)
head(sets)
data(aagmex_expr)
expr.input=aagmex_expr
expr.input[1:4,1:6]
data(aagmex_pheno)
pheno.input=aagmex_pheno
pheno.input$phen
head(pheno.input$class.v)
data(hallmark.gs)
d0 = c(hallmark.gs, C1.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=d0,
doc.string="hello",
nperm=100,
fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,upper_percent=0.1,color_line="black",
color_tick="blue")
pp$plots[[1]]
plot.ES(list.of.plots=pp$plots,plotname="hello")
remotes::install_github("sarah-innis/GSEA.plot")
# library(devtools)
# library(GSEA.plot)
library(GSEA.plot)
source("GSEA.1.0.sei3.R")
source("Run.GSEA.022319.R")
dir="/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/R"
setwd(dir)
data(key)
head(key)
GO_mf_filename=database_key("GO molecular function")
GO_mf_filename
descriptive_names=database_key("all")
head(descriptive_names)
data(hallmark.gs)
data(C1.gs)
sets=get_genesets(hallmark.gs)
head(sets)
data(aagmex_expr)
expr.input=aagmex_expr
expr.input[1:4,1:6]
data(aagmex_pheno)
pheno.input=aagmex_pheno
pheno.input$phen
head(pheno.input$class.v)
data(hallmark.gs)
d0 = c(hallmark.gs, C1.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=d0,
doc.string="hello",
nperm=100,
fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,upper_percent=0.1,color_line="black",
color_tick="blue")
remotes::install_github("sarah-innis/GSEA.plot")
# library(devtools)
# library(GSEA.plot)
library(GSEA.plot)
source("GSEA.1.0.sei3.R")
source("Run.GSEA.022319.R")
dir="/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/R"
setwd(dir)
data(key)
head(key)
# GO_mf_filename=database_key("GO molecular function")
# GO_mf_filename
# descriptive_names=database_key("all")
# head(descriptive_names)
data(hallmark.gs)
data(C1.gs)
sets=get_genesets(hallmark.gs)
head(sets)
data(aagmex_expr)
expr.input=aagmex_expr
# expr.input[1:4,1:6]
data(aagmex_pheno)
pheno.input=aagmex_pheno
# pheno.input$phen
# head(pheno.input$class.v)
data(hallmark.gs)
d0 = c(hallmark.gs, C1.gs)
gene.set.input=hallmark.gs
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
gene.set.input=d0,
doc.string="hello",
nperm=100,
fdr.q.val.threshold = 0.25,
abs.val=F,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,upper_percent=0.1,color_line="black",
color_tick="blue")
# pp$plots[[1]]
plot.ES(list.of.plots=pp$plots,plotname="hello")
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
head(pp$gene.set.reference.matrix[[2]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[2]]
names(pp$gene.set.reference.matrix)[[3]]
names(pp$gene.set.reference.matrix)
rownames(gene.set.reference.matrix)
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
rownames(gene.set.reference.matrix)
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
rownames(pp$gene.set.reference.matrix)
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
colnames(pp$gene.set.reference.matrix)
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
pp$gene.set.reference.matrix
dim(pp$gene.set.reference.matrix[[1]])
dim(pp$gene.set.reference.matrix)[[1]]
pp$report1[1,-3]
pp$report1[1,-3]
pp$report1[1,-2]
pp$report1[1,-4]
pp$report1[1,1]
pp$report1[1,-1]
pp$report1[1,-3]
pp$report1[1,-2]
pp$report1[1,-3]
pp$report1[1,-4]
pp$report1[2,-3]
pp$report1[1,-4]
pp$report1[1,-3]
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
pp$gene.set.reference.matrix
pp$gene.set.reference.matrix
pp$gene.set.reference.matrix
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
names(pp$gene.set.reference.matrix)[[1]]
head(pp$gene.set.reference.matrix[[1]])
pp$report1[1,-3]
data1=pp$ES[[2]]
head(data1)
enrich_ind=which(data1$EStag==1)
d=data.frame(x=enrich_ind, y=matrix(min(data1$RES)-0.12,length(enrich_ind),1),
vx=matrix(0,length(enrich_ind),1), vy=matrix(0.04,length(enrich_ind),1))
p <- ggplot(data1, aes(index,RES))+geom_line(col="black")
p <- p+geom_segment(data=d, mapping=aes(x=x, y=y, xend=x+vx, yend=y+vy),col="black")
p <- p+theme_classic()
p <- p+ggtitle(names(pp$gene.set.reference.matrix)[[2]])
print(p)
enrich_ind=which(data1$EStag==1)
d=data.frame(x=enrich_ind, y=matrix(min(data1$RES)-0.12,length(enrich_ind),1),
vx=matrix(0,length(enrich_ind),1), vy=matrix(0.04,length(enrich_ind),1))
p <- ggplot(data1, aes(index,RES))+geom_line(col="black")
p <- p+geom_segment(data=d, mapping=aes(x=x, y=y, xend=x+vx, yend=y+vy),col="black")
p <- p+theme_classic()
p <- p+ggtitle(names(pp$gene.set.reference.matrix)[[2]])
print(p)
enrich_ind=which(data1$EStag==1)
d=data.frame(x=enrich_ind, y=matrix(min(data1$RES)-0.12,length(enrich_ind),1),
vx=matrix(0,length(enrich_ind),1), vy=matrix(0.04,length(enrich_ind),1))
p <- ggplot(data1, aes(index,RES))+geom_line(col="black")
p <- p+geom_segment(data=d, mapping=aes(x=x, y=y, xend=x+vx, yend=y+vy),col="black")
p <- p+theme_classic()
p <- p+ggtitle(names(pp$gene.set.reference.matrix)[[2]])
print(p)
sets=get_genesets(hallmark.gs)
symbols=get_genesymbols(hallmark.gs)
entry1=c("source_1",symbols$HALLMARK_TNFA_SIGNALING_VIA_NFKB)
entry2=c("source_2",symbols$HALLMARK_HYPOXIA)
entry3=c("source_3",symbols$HALLMARK_CHOLESTEROL_HOMEOSTASIS)
hall_13.db=list(entry1,entry2,entry3)
names(hall_13.db)=c(sets[1],sets[2],sets[3])
gene.set.input=create_geneset_db(hall_13.db)
dat = "/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/deg.RData"
load(dat)
dat = "/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/deg.RData"
load(dat)
head(dat_F_gtex)
key
load(dat)
dat = "/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/deg.RData"
load(dat)
load(dat)
dat = "/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/deg.RData"
load(dat)
dat = "/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/deg.RData"
load(dat)
View(dat_F_gtex)
load("/Users/kelsiereinaltt/Documents/GSEA-X/data/deg.RData")
load("/Users/kelsiereinaltt/Documents/GSEA-X/data/deg.RData")
remotes::install_github("sarah-innis/GSEA.plot")
dir="/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/R"
setwd(dir)
#remotes::install_github("sarah-innis/GSEA.plot")
#library(devtools)
#library(GSEA.plot)
dat = "/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/deg.RData"
load(dat)
# use gene ids for gtex
all(colnames(dat_F_gtex) == colnames(dat_M_gtex))
fname = "/Users/kelsiereinaltt/Documents/GSEApaper-Kelsie/gencode_gene_map.txt"
ann_gene0 = read.table(fname,header=T,sep="\t",stringsAsFactors=F,quote = "")
ggenes = sapply(colnames(dat_F_gtex),function(x){ann_gene0$gene_name[which(ann_gene0$gene_id==x)]})
getwd()
dir="/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/R"
setwd(dir)
#remotes::install_github("sarah-innis/GSEA.plot")
#library(devtools)
#library(GSEA.plot)
dat = "/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/deg.RData"
load(dat)
# use gene ids for gtex
all(colnames(dat_F_gtex) == colnames(dat_M_gtex))
fname = "/Users/kelsiereinaltt/Documents/GSEApaper-Kelsie/gencode_gene_map.txt"
ann_gene0 = read.table(fname,header=T,sep="\t",stringsAsFactors=F,quote = "")
ggenes = sapply(colnames(dat_F_gtex),function(x){ann_gene0$gene_name[which(ann_gene0$gene_id==x)]})
colnames(dat_F_gtex) = colnames(dat_M_gtex) = ggenes
# specify phenotypes
pheno.input = list()
pheno.input[["phen"]] = c("Female","Male")
pheno.input[["class.v"]] = c(rep(0,nrow(dat_F_gtex)), rep(1,nrow(dat_M_gtex)))
# format expression data
expr.input = cbind(t(dat_F_gtex), t(dat_M_gtex)) %>% as.data.frame(stringsAsFactors=F)
# run GSEA.R and newGSEAplots.R
library(GSEA.plot)
source("GSEA.1.0.sei3.R")
source("Run.GSEA.022319.R")
data(hallmark.gs)
d0 = hallmark.gs
# KLF14 targets
data(transf)
data(transm)
tx = t(c("KLF14targets","source",transf[,1],transm[,1]))
d1 = add_to_database(database=d0, addition=tx)
# receptors/ligands
data(Kadoki_ligands.db)
data(Kadoki_receptors.db)
d2 = c(d1, Kadoki_ligands.db, Kadoki_receptors.db)
# transcription factors
data(ENCODE.db)
d3 = c(d2, ENCODE.db)
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
#gene.set.input=gene.set.input,
gene.set.input=d3,
doc.string="kTest7",
nperm=100,#supposed to be 1000
fdr.q.val.threshold = 0.25,
abs.val=F,
gs.size.threshold.max=999999,#was 1000
gs.size.threshold.min=2,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="green")
pp$plots[[1]]
plot.ES(list.of.plots=pp$plots,plotname="kTest-7")
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
#gene.set.input=gene.set.input,
gene.set.input=d3,
doc.string="kTest7",
nperm=100,#supposed to be 1000
fdr.q.val.threshold = 0.25,
abs.val=F,
gs.size.threshold.max=999999,#was 1000
gs.size.threshold.min=2,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="green")
# format expression data
expr.input = cbind(t(dat_F_gtex), t(dat_M_gtex)) %>% as.data.frame(stringsAsFactors=F)
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
#gene.set.input=gene.set.input,
gene.set.input=d3,
doc.string="kTest7",
nperm=100,#supposed to be 1000
fdr.q.val.threshold = 0.25,
abs.val=F,
gs.size.threshold.max=999999,#was 1000
gs.size.threshold.min=2,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="green")
pp$plots[[1]]
plot.ES(list.of.plots=pp$plots,plotname="kTest-7")
dir="/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/R"
setwd(dir)
#remotes::install_github("sarah-innis/GSEA.plot")
#library(devtools)
#library(GSEA.plot)
dat = "/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/deg.RData"
load(dat)
# use gene ids for gtex
all(colnames(dat_F_gtex) == colnames(dat_M_gtex))
fname = "/Users/kelsiereinaltt/Documents/GSEApaper-Kelsie/gencode_gene_map.txt"
ann_gene0 = read.table(fname,header=T,sep="\t",stringsAsFactors=F,quote = "")
ggenes = sapply(colnames(dat_F_gtex),function(x){ann_gene0$gene_name[which(ann_gene0$gene_id==x)]})
colnames(dat_F_gtex) = colnames(dat_M_gtex) = ggenes
# specify phenotypes
pheno.input = list()
pheno.input[["phen"]] = c("Female","Male")
pheno.input[["class.v"]] = c(rep(0,nrow(dat_F_gtex)), rep(1,nrow(dat_M_gtex)))
# format expression data
expr.input = cbind(t(dat_F_gtex), t(dat_M_gtex)) %>% as.data.frame(stringsAsFactors=F)
# run GSEA.R and newGSEAplots.R
library(GSEA.plot)
source("GSEA.1.0.sei3.R")
source("Run.GSEA.022319.R")
data(hallmark.gs)
d0 = hallmark.gs
# KLF14 targets
data(transf)
data(transm)
tx = t(c("KLF14targets","source",transf[,1],transm[,1]))
d1 = add_to_database(database=d0, addition=tx)
# receptors/ligands
data(Kadoki_ligands.db)
data(Kadoki_receptors.db)
d2 = c(d1, Kadoki_ligands.db, Kadoki_receptors.db)
# transcription factors
data(ENCODE.db)
d3 = c(d2, ENCODE.db)
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
#gene.set.input=gene.set.input,
gene.set.input=d3,
doc.string="kTest-7",
nperm=100,#supposed to be 1000
fdr.q.val.threshold = 0.25,
abs.val=F,
gs.size.threshold.max=999999,#was 1000
gs.size.threshold.min=2,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="green")
pp$plots[[1]]
plot.ES(list.of.plots=pp$plots,plotname="kTest-7")
dir="/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/R"
setwd(dir)
#remotes::install_github("sarah-innis/GSEA.plot")
#library(devtools)
#library(GSEA.plot)
dat = "/Users/kelsiereinaltt/Documents/GSEA.plot-Kelsie/deg.RData"
load(dat)
# use gene ids for gtex
all(colnames(dat_F_gtex) == colnames(dat_M_gtex))
fname = "/Users/kelsiereinaltt/Documents/GSEApaper-Kelsie/gencode_gene_map.txt"
ann_gene0 = read.table(fname,header=T,sep="\t",stringsAsFactors=F,quote = "")
ggenes = sapply(colnames(dat_F_gtex),function(x){ann_gene0$gene_name[which(ann_gene0$gene_id==x)]})
colnames(dat_F_gtex) = colnames(dat_M_gtex) = ggenes
# specify phenotypes
pheno.input = list()
pheno.input[["phen"]] = c("Female","Male")
pheno.input[["class.v"]] = c(rep(0,nrow(dat_F_gtex)), rep(1,nrow(dat_M_gtex)))
# format expression data
expr.input = cbind(t(dat_F_gtex), t(dat_M_gtex)) %>% as.data.frame(stringsAsFactors=F)
# run GSEA.R and newGSEAplots.R
library(GSEA.plot)
source("GSEA.1.0.sei3.R")
source("Run.GSEA.022319.R")
data(hallmark.gs)
d0 = hallmark.gs
# KLF14 targets
data(transf)
data(transm)
tx = t(c("KLF14targets","source",transf[,1],transm[,1]))
d1 = add_to_database(database=d0, addition=tx)
# receptors/ligands
data(Kadoki_ligands.db)
data(Kadoki_receptors.db)
d2 = c(d1, Kadoki_ligands.db, Kadoki_receptors.db)
# transcription factors
data(ENCODE.db)
d3 = c(d2, ENCODE.db)
pp= GSEAplots(input.ds.name=expr.input,
input.cls.name=pheno.input,
#gene.set.input=gene.set.input,
gene.set.input=d3,
doc.string="kTest-7",
nperm=100,#supposed to be 1000
fdr.q.val.threshold = 0.25,
abs.val=F,
gs.size.threshold.max=999999,#was 1000
gs.size.threshold.min=2,
bar_percent=0.1,
gap_percent=0.1,
under_percent=0.1,
upper_percent=0.1,
color_line="black",
color_tick="green")
pp$plots[[1]]
plot.ES(list.of.plots=pp$plots,plotname="kTest-7")
getwd()
